@import "lib/noise.js";

function onRun(context) {
	var doc = context.document;
	var selection = context.selection;

	if ([selection count] < 1) {
		[doc showMessage: "Select at least one object"];
		return;
	}

	var alert = [COSAlertWindow new];
	[alert setMessageText: "Resize each"];

	[alert addTextLabelWithValue: "Width"];
	[alert addTextFieldWithValue: "0"];
	[alert addTextLabelWithValue: "Height"];
	[alert addTextFieldWithValue: "0"];

	// Dimensions cribbed from COSAlertWindow's addTextFieldWithValue method
	var cumulative = [[NSButton alloc] initWithFrame:NSMakeRect(0, 0, 300, 24)];

	[cumulative setButtonType: NSSwitchButton];
	cumulative.title = "Cumulative";
	[alert addAccessoryView: cumulative];

	var randomize = [[NSButton alloc] initWithFrame:NSMakeRect(0, 0, 300, 24)];

	[randomize setButtonType: NSSwitchButton];
	randomize.title = "Randomize";
	[alert addAccessoryView: randomize];

	var round = [[NSButton alloc] initWithFrame:NSMakeRect(0, 0, 300, 24)];

	[round setButtonType: NSSwitchButton];
	round.title = "Round to pixel";
	round.state = NSOnState;
	[alert addAccessoryView: round];

	[alert addButtonWithTitle: "OK"];
	[alert addButtonWithTitle: "Cancel"];

	var responseCode = [alert runModal];

	if (responseCode == NSAlertSecondButtonReturn) return;

	var width = parseInt([[alert viewAtIndex: 1] stringValue]);
	var height = parseInt([[alert viewAtIndex: 3] stringValue]);
	var accumulate = [cumulative state] == NSOnState;
	var perturb = [randomize state] == NSOnState;

	for (var i = 0; i < selection.count(); i++) {
		var layer = selection[i];
		var frame = [layer frame];

		var dw = (width * (accumulate ? (i + 1) : 1)) + (perturb ? simpleNoise(width) : 0);
		var dh = (height * (accumulate ? (i + 1) : 1)) + (perturb ? simpleNoise(height) : 0);

		if ([round state] == NSOnState) {
			dw = Math.floor(dw);
			dh = Math.floor(dh);
		}

		[frame setWidth: [frame width] + dw];
		[frame setHeight: [frame height] + dh];
	}
}
